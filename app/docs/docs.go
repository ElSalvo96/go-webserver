// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/sum": {
            "get": {
                "description": "Sum in query string",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sum"
                ],
                "summary": "Sum in query string",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number One",
                        "name": "num1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number Two",
                        "name": "num2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-endpoints_sumOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-string"
                        }
                    }
                }
            },
            "post": {
                "description": "Sum as post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sum"
                ],
                "summary": "Sum as post",
                "parameters": [
                    {
                        "description": "body input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.sumInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-endpoints_sumOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/sum/{num1}": {
            "get": {
                "description": "Sum with first number in route path and second in query string",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sum"
                ],
                "summary": "Sum with first number in route path and second in query string",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number One",
                        "name": "num1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number Two",
                        "name": "num2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-endpoints_sumOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/sum/{num1}/{num2}": {
            "get": {
                "description": "Sum as route path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sum"
                ],
                "summary": "Sum as route path",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number One",
                        "name": "num1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number Two",
                        "name": "num2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-endpoints_sumOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-string"
                        }
                    }
                }
            }
        },
        "/heartbeat": {
            "get": {
                "description": "Heartbeat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "heartbeat"
                ],
                "summary": "Heartbeat",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoints.jsonResponse-endpoints_heartbeatOutput"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "endpoints.heartbeatOutput": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "endpoints.jsonResponse-endpoints_heartbeatOutput": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/endpoints.heartbeatOutput"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "endpoints.jsonResponse-endpoints_sumOutput": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/endpoints.sumOutput"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "endpoints.jsonResponse-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "endpoints.sumInput": {
            "type": "object",
            "required": [
                "num1",
                "num2"
            ],
            "properties": {
                "num1": {
                    "type": "integer"
                },
                "num2": {
                    "type": "integer"
                }
            }
        },
        "endpoints.sumOutput": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
