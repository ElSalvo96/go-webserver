/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as appAuthImport } from './routes/(app)/_auth'

// Create Virtual Routes

const appImport = createFileRoute('/(app)')()
const appAuthAuthAppLazyImport = createFileRoute('/(app)/_auth/_auth/app')()

// Create/Update Routes

const appRoute = appImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport
  .update({
    path: '/login',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/login.lazy').then((d) => d.Route))

const appAuthRoute = appAuthImport.update({
  id: '/_auth',
  getParentRoute: () => appRoute,
} as any)

const appAuthAuthAppLazyRoute = appAuthAuthAppLazyImport
  .update({
    path: '/app',
    getParentRoute: () => appAuthRoute,
  } as any)
  .lazy(() =>
    import('./routes/(app)/_auth/_auth.app.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_auth': {
      id: '/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appAuthImport
      parentRoute: typeof appRoute
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(app)/_auth/_auth/app': {
      id: '/_auth/_auth/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof appAuthAuthAppLazyImport
      parentRoute: typeof appAuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  appRoute: appRoute.addChildren({
    appAuthRoute: appAuthRoute.addChildren({ appAuthAuthAppLazyRoute }),
  }),
  authLoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/",
        "/login"
      ]
    },
    "/": {
      "filePath": "(app)",
      "children": [
        "/_auth"
      ]
    },
    "/_auth": {
      "filePath": "(app)/_auth.tsx",
      "parent": "/",
      "children": [
        "/_auth/_auth/app"
      ]
    },
    "/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/_auth/_auth/app": {
      "filePath": "(app)/_auth/_auth.app.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
